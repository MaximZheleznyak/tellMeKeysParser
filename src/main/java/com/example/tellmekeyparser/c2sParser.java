package com.example.tellmekeyparser;import java.io.FileInputStream;import java.io.IOException;import java.util.ArrayList;public class c2sParser {    private String MotherBoard;    private String CPU;    private String Network;    private String HDD;    public String getMotherBoard() {        return MotherBoard;    }    public String getCPU() {        return CPU;    }    public String getNetwork() {        return Network;    }    public String getHDD() {        return HDD;    }    void GetParametersFromc2sFile(String c2sFileName) {        ArrayList<Integer> list = new ArrayList<>();        StringBuilder stringBuilder = new StringBuilder();        try {            try (FileInputStream fis = new FileInputStream(c2sFileName)) {                while (fis.available() > 0) {                    list.add(fis.read());                }            }            for (int i = 387; i < 395; i++) {                int x = list.get(i);                stringBuilder.append((char) x);            }            for (int i = 400; i < 424; i++) {                int x = list.get(i);                stringBuilder.append((char) x);            }            this.HDD = stringBuilder.toString();            stringBuilder.setLength(0);            for (int i = 286; i < 286 + 32; i++) {                int x = list.get(i);                stringBuilder.append((char) x);            }            this.MotherBoard = stringBuilder.toString();            stringBuilder.setLength(0);            for (int i = 318; i < 326; i++) {                int x = list.get(i);                stringBuilder.append((char) x);            }            for (int i = 331; i < 318 + 37; i++) {                int x = list.get(i);                stringBuilder.append((char) x);            }            this.CPU = stringBuilder.toString();            stringBuilder.setLength(0);            for (int i = 355; i < 355 + 32; i++) {                int x = list.get(i);                stringBuilder.append((char) x);            }            this.Network = stringBuilder.toString();        } catch (IOException e) {            throw new RuntimeException(e);        }    }}